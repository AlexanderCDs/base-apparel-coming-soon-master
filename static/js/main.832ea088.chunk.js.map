{"version":3,"sources":["components/Image.js","components/InputWithButton.js","components/Paragraph.js","components/Title.js","assets/images/hero-desktop.jpg","assets/svgs/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Image","props","image","name","className","alt","undefined","width","height","src","Error","errors","validate","type","message","InputWithButton","placeholder","required","useForm","register","handleSubmit","formState","onSubmit","data","alert","email","value","pattern","Paragraph","children","Title","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAoBeA,EAbD,SAACC,GACX,IAAQC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KACf,OACI,qBAAKC,UAAU,QAAf,SACI,qBACIC,SAAcC,IAATH,EAAqB,UAAYA,EACtCI,MAAM,GACNC,OAAO,GACPC,IAAKP,O,cC6BfQ,EAAQ,SAACT,GACX,IAAQU,EAA2BV,EAA3BU,OAAQC,EAAmBX,EAAnBW,SAAUT,EAASF,EAATE,KAC1B,OACU,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAASR,MAAe,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAASR,GAAMU,QAASD,EACtC,sBAAMR,UAAU,QAAhB,gBAAyBO,QAAzB,IAAyBA,OAAzB,EAAyBA,EAASR,GAAMW,UAExC,MAKGC,EA/CS,SAACd,GACrB,IAAQe,EAA+Cf,EAA/Ce,YAAab,EAAkCF,EAAlCE,KAAMU,EAA4BZ,EAA5BY,KAAMI,EAAsBhB,EAAtBgB,SAAUH,EAAYb,EAAZa,QAC3C,EAA0DI,cAAlDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BT,EAA7C,EAAgCU,UAAaV,OAI7C,OACI,sBAAKP,UAAU,oBAAf,UACI,uBAAMkB,SAAUF,GALP,SAACG,GACdC,MAAM,cAAD,OAAeD,EAAKE,WAIrB,UACI,mCACIT,YAAaA,EACbZ,UAAU,QACVS,KAAMA,GAAQ,OACdC,QAASA,GACLK,EAAShB,EAAM,CACfc,SAAU,CACNS,MAAOT,EACPH,QAAS,oBAEba,QAAS,CACLD,MAAO,2CACPZ,QAAS,oCAGrB,uBACIV,UAAU,YACVS,KAAK,SAASa,MAAM,QAE5B,sBAAKtB,UAAU,gBAAf,UACI,cAAC,EAAD,CAAOO,OAAQA,EAAQC,SAAS,WAAWT,KAAMA,IACjD,cAAC,EAAD,CAAOQ,OAAQA,EAAQC,SAAS,UAAUT,KAAMA,WCtBjDyB,EATG,SAAC3B,GACf,IAAQ4B,EAAa5B,EAAb4B,SACR,OACI,qBAAKzB,UAAU,YAAf,SACI,4BAAIyB,OCKDC,EATD,SAAC7B,GACX,IAAQ4B,EAAa5B,EAAb4B,SACR,OACI,qBAAKzB,UAAU,QAAf,SACI,6BAAKyB,OCXF,MAA0B,yCCA1B,MAA0B,iCCyCzBE,EA3BJ,SAAC9B,GACT,OACI,0BAASG,UAAU,UAAnB,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,CAAOF,MAAO8B,IACd,eAAC,EAAD,WACI,2CADJ,kBAGA,cAAC,EAAD,sKAKA,cAAC,EAAD,CACI7B,KAAK,QACLc,UAAU,EACVD,YAAY,uBAGxB,qBAAKZ,UAAU,YAAf,SACI,cAAC,EAAD,CAAOF,MAAOA,UCvBf+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.832ea088.chunk.js","sourcesContent":["/**\r\n * @author: alexandercds\r\n * @description: \r\n * @date: 08/septiembre/2021 \r\n**/\r\nimport React, { useState } from 'react';  \r\n\r\nconst Image = (props) => {\r\n    const { image, name } = props\r\n    return (\r\n        <div className=\"image\">\r\n            <img \r\n                alt={name === undefined ? 'default' : name} \r\n                width=\"\" \r\n                height=\"\" \r\n                src={image} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Image;","/**\r\n * @author: alexandercds\r\n * @description: \r\n * @date: 08/septiembre/2021 \r\n**/\r\nimport React, { useState } from 'react';  \r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst InputWithButton = (props) => {\r\n    const { placeholder, name, type, required, message } = props\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = (data) => {\r\n        alert(`Send email ${data.email}`);   \r\n    }\r\n    return (\r\n        <div className=\"input-with-button\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input \r\n                    placeholder={placeholder} \r\n                    className=\"input\" \r\n                    type={type && 'text'} \r\n                    message={message}\r\n                    {...register(name, { \r\n                        required: {\r\n                            value: required, \r\n                            message: \"This is required\"\r\n                        },\r\n                        pattern: {\r\n                            value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i, \r\n                            message: \"Please provide a valid email\"\r\n                        }\r\n                    })}/> \r\n                <input \r\n                    className=\"btn arrow\" \r\n                    type=\"submit\" value=\"\"/>\r\n            </form> \r\n            <div className=\"content-error\">\r\n                <Error errors={errors} validate=\"required\" name={name}/>\r\n                <Error errors={errors} validate=\"pattern\" name={name}/> \r\n            </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nconst Error = (props) => {\r\n    const { errors, validate, name } = props;\r\n    return (\r\n        errors?.[name] && errors?.[name].type === validate ? ( \r\n            <span className=\"error\">{errors?.[name].message}</span>\r\n        ) : (\r\n            null\r\n        )\r\n    )\r\n}\r\n\r\nexport default InputWithButton;","/**\r\n * @author: alexandercds\r\n * @description: \r\n * @date: 08/septiembre/2021 \r\n**/\r\nimport React, { useState } from 'react';  \r\n\r\nconst Paragraph = (props) => {\r\n    const { children } = props\r\n    return (\r\n        <div className=\"paragraph\">\r\n            <p>{children}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paragraph;","/**\r\n * @author: alexandercds\r\n * @description: \r\n * @date: 08/septiembre/2021 \r\n**/\r\nimport React, { useState } from 'react';  \r\n\r\nconst Title = (props) => {\r\n    const { children } = props\r\n    return (\r\n        <div className=\"title\">\r\n            <h2>{children}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","export default __webpack_public_path__ + \"static/media/hero-desktop.659bc9a7.jpg\";","export default __webpack_public_path__ + \"static/media/logo.bfe35add.svg\";","/**\n * @author: alexandercds\n * @description: \n * @date: 08/septiembre/2021 \n**/\nimport { useEffect, useState } from 'react';\nimport './assets/scss/App.scss';\nimport Image from './components/Image';\nimport InputWithButton from './components/InputWithButton';\nimport Paragraph from './components/Paragraph';\nimport Title from './components/Title';\nimport image from './assets/images/hero-desktop.jpg';\nimport logo from './assets/svgs/logo.svg';\n\nconst App = (props) => { \n    return (\n        <section className=\"section\">\n            <div className=\"col left\"> \n                <div className=\"col-content\">\n                    <Image image={logo}/>\n                    <Title>\n                        <strong>We're</strong> coming soon\n                    </Title>\n                    <Paragraph>\n                        Hello fellow shoppers! We're currently building our new \n                        fashion store. Add your email below to stay up-to-date with\n                        announcements and our launch deals.\n                    </Paragraph>\n                    <InputWithButton  \n                        name=\"email\"  \n                        required={true} \n                        placeholder=\"Email Address\" />\n                </div>\n            </div>\n            <div className=\"col right\"> \n                <Image image={image}/>\n            </div> \n        </section>\n    );\n }\n \n export default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}